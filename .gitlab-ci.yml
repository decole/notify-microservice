stages:
  - manual-clean
  - preparation
  - testing

variables:
  SSH_COMMAND: $SSH_COMMAND
  SMTP_CREDENTIALS: $SMTP_CREDENTIALS

composer:
  stage: preparation
  tags:
    - microservice
  script:
    - php -v
    - ls -la
    - cp -n docker-compose.yaml.dist docker-compose.yaml
    - cp -n .env.local.example .env.local
    - cp -n .env.local.example .env.test.local
    - docker-compose -f docker-compose.ci.yaml down
    - docker-compose -f docker-compose.ci.yaml up -d
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp -n docker-compose.yaml.dist docker-compose.yaml
    - cp -n .env.local.example .env.local
    - cp -n .env.local.example .env.test.local
  artifacts:
    paths:
      - vendor/
      - docker-compose.yaml
    expire_in: 1 week
    when: always
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/

tests:
  stage: testing
  tags:
    - microservice
  dependencies:
    - composer
  script:
    - docker-compose -f docker-compose.ci.yaml exec -T php-fpm php bin/console doctrine:migrations:migrate --env test --no-interaction
    - docker-compose -f docker-compose.ci.yaml exec -T php-fpm php vendor/codeception/codeception/codecept run
    - docker-compose -f docker-compose.ci.yaml exec -T php-fpm php vendor/codeception/codeception/codecept clean
    - docker-compose -f docker-compose.ci.yaml exec -T php-fpm rm -r var/log var/cache vendor/

clean:
  stage: manual-clean
  script:
    - docker-compose -f docker-compose.ci.yaml up -d
    - docker-compose -f docker-compose.ci.yaml exec -T php-fpm rm -r var/log var/cache vendor/
  when: manual
